(self.webpackChunkshell=self.webpackChunkshell||[]).push([[213],{1213:(g,c,a)=>{a.r(c),a.d(c,{AuthService:()=>S,CoreServicesComponent:()=>m,CoreServicesService:()=>l});var n=a(5565);let l=(()=>{class o{constructor(){}static{this.\u0275fac=function(t){return new(t||o)}}static{this.\u0275prov=n.\u0275\u0275defineInjectable({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})();var h=a(467),d=a(4866),u=a(1663);let S=(()=>{class o{constructor(e){this.http=e,this.id="auth of pokemon",this.ISSUER_BASE_URL="https://topfix-wrczmn.us1.zitadel.cloud",this.CLIENT_ID="336777344075263315",this.REDIRECT_URI="https://opensourcekd.github.io/pokemon/#/auth-callback",this.SCOPE="openid profile email",this.TOKEN_KEY="zitadel_token",this.USER_INFO_KEY="zitadel_user_info",this.userSubject=new d.BehaviorSubject(this.getUserInfoFromStorage()),this.user$=this.userSubject.asObservable(),console.log("In constructor of auth service in pokemon")}login(e){e&&console.log(`[AuthService] Logged in: ${e}`),this.redirectToZitadelLogin()}redirectToZitadelLogin(){const e=new URL(`${this.ISSUER_BASE_URL}/oauth/v2/authorize`),t=this.generateRandomState(),r=this.generateCodeVerifier();sessionStorage.setItem("oauth_state",t),sessionStorage.setItem("code_verifier",r),e.searchParams.append("client_id",this.CLIENT_ID),e.searchParams.append("redirect_uri",this.REDIRECT_URI),e.searchParams.append("response_type","code"),e.searchParams.append("scope",this.SCOPE),e.searchParams.append("state",t),window.location.href=e.toString()}handleCallback(e,t){var r=this;return(0,h.A)(function*(){const i=sessionStorage.getItem("oauth_state");if(t!==i)return console.error("State mismatch - possible CSRF attack"),!1;try{const s=yield r.exchangeCodeForToken(e);r.setToken(s.access_token);const p=r.decodeIdToken(s.id_token);return r.setUserInfo(p),sessionStorage.removeItem("oauth_state"),sessionStorage.removeItem("code_verifier"),!0}catch(s){return console.error("Error exchanging code for token:",s),!1}})()}exchangeCodeForToken(e){var t=this;return(0,h.A)(function*(){const r=`${t.ISSUER_BASE_URL}/oauth/v2/token`,i=new URLSearchParams({grant_type:"authorization_code",code:e,redirect_uri:t.REDIRECT_URI,client_id:t.CLIENT_ID}),s=yield fetch(r,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:i.toString()});if(!s.ok)throw new Error(`Token exchange failed: ${s.statusText}`);return s.json()})()}decodeIdToken(e){try{const t=e.split(".")[1],r=JSON.parse(atob(t));return{sub:r.sub,name:r.name,email:r.email}}catch(t){return console.error("Error decoding ID token:",t),{sub:""}}}logout(){localStorage.removeItem(this.TOKEN_KEY),localStorage.removeItem(this.USER_INFO_KEY),this.userSubject.next(null)}getToken(){return localStorage.getItem(this.TOKEN_KEY)}setToken(e){localStorage.setItem(this.TOKEN_KEY,e)}isAuthenticated(){return!!this.getToken()}getUser(){return this.userSubject.value}getUserInfoFromStorage(){const e=localStorage.getItem(this.USER_INFO_KEY);return e?JSON.parse(e):null}setUserInfo(e){localStorage.setItem(this.USER_INFO_KEY,JSON.stringify(e)),this.userSubject.next(e)}generateRandomState(){const e=new Uint8Array(32);return crypto.getRandomValues(e),Array.from(e,t=>t.toString(16).padStart(2,"0")).join("")}generateCodeVerifier(){const e=new Uint8Array(32);return crypto.getRandomValues(e),Array.from(e,t=>t.toString(16).padStart(2,"0")).join("")}static{this.\u0275fac=function(t){return new(t||o)(n.\u0275\u0275inject(u.HttpClient))}}static{this.\u0275prov=n.\u0275\u0275defineInjectable({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})(),m=(()=>{class o{static{this.\u0275fac=function(t){return new(t||o)}}static{this.\u0275cmp=n.\u0275\u0275defineComponent({type:o,selectors:[["org-core-services"]],standalone:!0,features:[n.\u0275\u0275StandaloneFeature],decls:2,vars:0,template:function(t,r){1&t&&(n.\u0275\u0275elementStart(0,"p"),n.\u0275\u0275text(1," core-services works! "),n.\u0275\u0275elementEnd())}})}}return o})()}}]);